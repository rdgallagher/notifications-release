#!/bin/bash
set -e -x

export PATH="/var/vcap/packages/cf_cli/bin:$PATH"

export SCHEME=https
export DOMAIN=<%= properties.domain %>
export ADMIN_USER=<%= properties.notifications.cf.admin_user %>
export ADMIN_PASSWORD=<%= properties.notifications.cf.admin_password %>
export API_ENDPOINT=$SCHEME://api.$DOMAIN
export ORG=notifications-service
export SPACE=notifications-service
export QUOTA=notifications-service
export APP_NAME=notifications
export APP_DOMAIN=<%= properties.notifications.app_domain %>

export CF_HOME=`pwd`/home/cf
mkdir -p $CF_HOME

function authenticate_and_target() {
  cf api $API_ENDPOINT <% if properties.ssl.skip_cert_verify %>--skip-ssl-validation<% end %>
  cf auth $ADMIN_USER $ADMIN_PASSWORD
  cf create-org $ORG
  cf target -o $ORG
  cf create-space $SPACE
  cf target -s $SPACE
}

function create_quota() {
  cf create-quota $QUOTA -m 1G -r 10 -s 10
  cf update-quota $QUOTA -m 1G -r 10 -s 10 --disallow-paid-service-plans
  cf set-quota $ORG $QUOTA
}

function add_env_vars() {
  cf set-env $APP_NAME SMTP_HOST <%= properties.notifications.smtp.host %>
  cf set-env $APP_NAME SMTP_PASS <%= properties.notifications.smtp.pass %>
  cf set-env $APP_NAME SMTP_PORT <%= properties.notifications.smtp.port %>
  cf set-env $APP_NAME SMTP_USER <%= properties.notifications.smtp.user %>
  cf set-env $APP_NAME SMTP_TLS <%= properties.notifications.smtp.tls %>
  cf set-env $APP_NAME SENDER <%= properties.notifications.sender %>
  cf set-env $APP_NAME DOMAIN <%= properties.domain %>
  cf set-env $APP_NAME UAA_CLIENT_ID <%= properties.notifications.uaa.client_id %>
  cf set-env $APP_NAME UAA_CLIENT_SECRET <%= properties.notifications.uaa.client_secret %>
  cf set-env $APP_NAME VERIFY_SSL <%= !properties.ssl.skip_cert_verify %>
  cf set-env $APP_NAME ROOT_PATH "\$HOME"
  cf set-env $APP_NAME DATABASE_URL <%= properties.notifications.database_url %>
  cf set-env $APP_NAME GOBBLE_MIGRATIONS_DIR "\$HOME/gobble/migrations"
  cf set-env $APP_NAME ENCRYPTION_KEY "moons_of_endor"

  cf set-env $APP_NAME UAA_HOST $SCHEME://uaa.$DOMAIN
  cf set-env $APP_NAME CC_HOST $SCHEME://api.$DOMAIN
}

function push_app() {
  pushd /var/vcap/packages/notifications
    mkdir -p /var/vcap/data/tmp
    export TMPDIR=/var/vcap/data/tmp
    cf push $APP_NAME --no-start -d $APP_DOMAIN
  popd
}

function create_security_groups() {
  echo '#PWD'
  pwd
  echo '#FIND'
  find / -name 'security_groups.json'
  cf create-security-group AWS_BOSH_LITE_SECURITY_GROUP security_groups.json
  cf bind-staging-security-group AWS_BOSH_LITE_SECURITY_GROUP
  cf bind-running-security-group AWS_BOSH_LITE_SECURITY_GROUP
}

function boot_app() {
  cf restart $APP_NAME
}

cf -v
authenticate_and_target
create_security_groups
create_quota
push_app
add_env_vars
boot_app
